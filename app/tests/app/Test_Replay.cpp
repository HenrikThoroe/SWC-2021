#include "catch.hpp"
#include "XMLParser.hpp"
#include "GameManager.hpp"

using namespace App;
using namespace Logic;
using namespace Model;

TEST_CASE("Test Replays", "[app]") {
    auto parser = XMLParser();
    auto state  = GameManager(parser.getColorsInGamePtr());

    std::string inp = "";
    std::vector<Message> result;

    SECTION("Can parse only startPiece") {
        // We have two entries as the last one is always omitted (send again by the actual GameServer)
        inp =   "startPiece:PENTO_U\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"BLUE\" kind=\"PENTO_U\" rotation=\"NONE\" isFlipped=\"false\"><position x=\"0\" y=\"0\"/></piece></data>";
        parser.splitAndParseReplay(inp, result);

        REQUIRE(result.size() == 1);
        REQUIRE(result[0].type == MsgType::GAMESTATE);

        auto payload = std::any_cast<MementoMsg>(result[0].payload);

        REQUIRE(payload.startPiece == 10);

        state.updateWithMemento(payload);

        const auto& gState = state.getManagedState();
        REQUIRE(gState.initialPiece == 10);
        REQUIRE(gState.getTurn() == 0);
        REQUIRE(gState.getCurrentPieceColor() == PieceColor::BLUE);

        const auto& board = gState.getBoard();
        #pragma region BoardRequires
        REQUIRE(board.at(0, 0) == PieceColor::NONE);
        REQUIRE(board.at(0, 1) == PieceColor::NONE);
        REQUIRE(board.at(0, 2) == PieceColor::NONE);
        REQUIRE(board.at(0, 3) == PieceColor::NONE);
        REQUIRE(board.at(0, 4) == PieceColor::NONE);
        REQUIRE(board.at(0, 5) == PieceColor::NONE);
        REQUIRE(board.at(0, 6) == PieceColor::NONE);
        REQUIRE(board.at(0, 7) == PieceColor::NONE);
        REQUIRE(board.at(0, 8) == PieceColor::NONE);
        REQUIRE(board.at(0, 9) == PieceColor::NONE);
        REQUIRE(board.at(0, 10) == PieceColor::NONE);
        REQUIRE(board.at(0, 11) == PieceColor::NONE);
        REQUIRE(board.at(0, 12) == PieceColor::NONE);
        REQUIRE(board.at(0, 13) == PieceColor::NONE);
        REQUIRE(board.at(0, 14) == PieceColor::NONE);
        REQUIRE(board.at(0, 15) == PieceColor::NONE);
        REQUIRE(board.at(0, 16) == PieceColor::NONE);
        REQUIRE(board.at(0, 17) == PieceColor::NONE);
        REQUIRE(board.at(0, 18) == PieceColor::NONE);
        REQUIRE(board.at(0, 19) == PieceColor::NONE);
        REQUIRE(board.at(1, 0) == PieceColor::NONE);
        REQUIRE(board.at(1, 1) == PieceColor::NONE);
        REQUIRE(board.at(1, 2) == PieceColor::NONE);
        REQUIRE(board.at(1, 3) == PieceColor::NONE);
        REQUIRE(board.at(1, 4) == PieceColor::NONE);
        REQUIRE(board.at(1, 5) == PieceColor::NONE);
        REQUIRE(board.at(1, 6) == PieceColor::NONE);
        REQUIRE(board.at(1, 7) == PieceColor::NONE);
        REQUIRE(board.at(1, 8) == PieceColor::NONE);
        REQUIRE(board.at(1, 9) == PieceColor::NONE);
        REQUIRE(board.at(1, 10) == PieceColor::NONE);
        REQUIRE(board.at(1, 11) == PieceColor::NONE);
        REQUIRE(board.at(1, 12) == PieceColor::NONE);
        REQUIRE(board.at(1, 13) == PieceColor::NONE);
        REQUIRE(board.at(1, 14) == PieceColor::NONE);
        REQUIRE(board.at(1, 15) == PieceColor::NONE);
        REQUIRE(board.at(1, 16) == PieceColor::NONE);
        REQUIRE(board.at(1, 17) == PieceColor::NONE);
        REQUIRE(board.at(1, 18) == PieceColor::NONE);
        REQUIRE(board.at(1, 19) == PieceColor::NONE);
        REQUIRE(board.at(2, 0) == PieceColor::NONE);
        REQUIRE(board.at(2, 1) == PieceColor::NONE);
        REQUIRE(board.at(2, 2) == PieceColor::NONE);
        REQUIRE(board.at(2, 3) == PieceColor::NONE);
        REQUIRE(board.at(2, 4) == PieceColor::NONE);
        REQUIRE(board.at(2, 5) == PieceColor::NONE);
        REQUIRE(board.at(2, 6) == PieceColor::NONE);
        REQUIRE(board.at(2, 7) == PieceColor::NONE);
        REQUIRE(board.at(2, 8) == PieceColor::NONE);
        REQUIRE(board.at(2, 9) == PieceColor::NONE);
        REQUIRE(board.at(2, 10) == PieceColor::NONE);
        REQUIRE(board.at(2, 11) == PieceColor::NONE);
        REQUIRE(board.at(2, 12) == PieceColor::NONE);
        REQUIRE(board.at(2, 13) == PieceColor::NONE);
        REQUIRE(board.at(2, 14) == PieceColor::NONE);
        REQUIRE(board.at(2, 15) == PieceColor::NONE);
        REQUIRE(board.at(2, 16) == PieceColor::NONE);
        REQUIRE(board.at(2, 17) == PieceColor::NONE);
        REQUIRE(board.at(2, 18) == PieceColor::NONE);
        REQUIRE(board.at(2, 19) == PieceColor::NONE);
        REQUIRE(board.at(3, 0) == PieceColor::NONE);
        REQUIRE(board.at(3, 1) == PieceColor::NONE);
        REQUIRE(board.at(3, 2) == PieceColor::NONE);
        REQUIRE(board.at(3, 3) == PieceColor::NONE);
        REQUIRE(board.at(3, 4) == PieceColor::NONE);
        REQUIRE(board.at(3, 5) == PieceColor::NONE);
        REQUIRE(board.at(3, 6) == PieceColor::NONE);
        REQUIRE(board.at(3, 7) == PieceColor::NONE);
        REQUIRE(board.at(3, 8) == PieceColor::NONE);
        REQUIRE(board.at(3, 9) == PieceColor::NONE);
        REQUIRE(board.at(3, 10) == PieceColor::NONE);
        REQUIRE(board.at(3, 11) == PieceColor::NONE);
        REQUIRE(board.at(3, 12) == PieceColor::NONE);
        REQUIRE(board.at(3, 13) == PieceColor::NONE);
        REQUIRE(board.at(3, 14) == PieceColor::NONE);
        REQUIRE(board.at(3, 15) == PieceColor::NONE);
        REQUIRE(board.at(3, 16) == PieceColor::NONE);
        REQUIRE(board.at(3, 17) == PieceColor::NONE);
        REQUIRE(board.at(3, 18) == PieceColor::NONE);
        REQUIRE(board.at(3, 19) == PieceColor::NONE);
        REQUIRE(board.at(4, 0) == PieceColor::NONE);
        REQUIRE(board.at(4, 1) == PieceColor::NONE);
        REQUIRE(board.at(4, 2) == PieceColor::NONE);
        REQUIRE(board.at(4, 3) == PieceColor::NONE);
        REQUIRE(board.at(4, 4) == PieceColor::NONE);
        REQUIRE(board.at(4, 5) == PieceColor::NONE);
        REQUIRE(board.at(4, 6) == PieceColor::NONE);
        REQUIRE(board.at(4, 7) == PieceColor::NONE);
        REQUIRE(board.at(4, 8) == PieceColor::NONE);
        REQUIRE(board.at(4, 9) == PieceColor::NONE);
        REQUIRE(board.at(4, 10) == PieceColor::NONE);
        REQUIRE(board.at(4, 11) == PieceColor::NONE);
        REQUIRE(board.at(4, 12) == PieceColor::NONE);
        REQUIRE(board.at(4, 13) == PieceColor::NONE);
        REQUIRE(board.at(4, 14) == PieceColor::NONE);
        REQUIRE(board.at(4, 15) == PieceColor::NONE);
        REQUIRE(board.at(4, 16) == PieceColor::NONE);
        REQUIRE(board.at(4, 17) == PieceColor::NONE);
        REQUIRE(board.at(4, 18) == PieceColor::NONE);
        REQUIRE(board.at(4, 19) == PieceColor::NONE);
        REQUIRE(board.at(5, 0) == PieceColor::NONE);
        REQUIRE(board.at(5, 1) == PieceColor::NONE);
        REQUIRE(board.at(5, 2) == PieceColor::NONE);
        REQUIRE(board.at(5, 3) == PieceColor::NONE);
        REQUIRE(board.at(5, 4) == PieceColor::NONE);
        REQUIRE(board.at(5, 5) == PieceColor::NONE);
        REQUIRE(board.at(5, 6) == PieceColor::NONE);
        REQUIRE(board.at(5, 7) == PieceColor::NONE);
        REQUIRE(board.at(5, 8) == PieceColor::NONE);
        REQUIRE(board.at(5, 9) == PieceColor::NONE);
        REQUIRE(board.at(5, 10) == PieceColor::NONE);
        REQUIRE(board.at(5, 11) == PieceColor::NONE);
        REQUIRE(board.at(5, 12) == PieceColor::NONE);
        REQUIRE(board.at(5, 13) == PieceColor::NONE);
        REQUIRE(board.at(5, 14) == PieceColor::NONE);
        REQUIRE(board.at(5, 15) == PieceColor::NONE);
        REQUIRE(board.at(5, 16) == PieceColor::NONE);
        REQUIRE(board.at(5, 17) == PieceColor::NONE);
        REQUIRE(board.at(5, 18) == PieceColor::NONE);
        REQUIRE(board.at(5, 19) == PieceColor::NONE);
        REQUIRE(board.at(6, 0) == PieceColor::NONE);
        REQUIRE(board.at(6, 1) == PieceColor::NONE);
        REQUIRE(board.at(6, 2) == PieceColor::NONE);
        REQUIRE(board.at(6, 3) == PieceColor::NONE);
        REQUIRE(board.at(6, 4) == PieceColor::NONE);
        REQUIRE(board.at(6, 5) == PieceColor::NONE);
        REQUIRE(board.at(6, 6) == PieceColor::NONE);
        REQUIRE(board.at(6, 7) == PieceColor::NONE);
        REQUIRE(board.at(6, 8) == PieceColor::NONE);
        REQUIRE(board.at(6, 9) == PieceColor::NONE);
        REQUIRE(board.at(6, 10) == PieceColor::NONE);
        REQUIRE(board.at(6, 11) == PieceColor::NONE);
        REQUIRE(board.at(6, 12) == PieceColor::NONE);
        REQUIRE(board.at(6, 13) == PieceColor::NONE);
        REQUIRE(board.at(6, 14) == PieceColor::NONE);
        REQUIRE(board.at(6, 15) == PieceColor::NONE);
        REQUIRE(board.at(6, 16) == PieceColor::NONE);
        REQUIRE(board.at(6, 17) == PieceColor::NONE);
        REQUIRE(board.at(6, 18) == PieceColor::NONE);
        REQUIRE(board.at(6, 19) == PieceColor::NONE);
        REQUIRE(board.at(7, 0) == PieceColor::NONE);
        REQUIRE(board.at(7, 1) == PieceColor::NONE);
        REQUIRE(board.at(7, 2) == PieceColor::NONE);
        REQUIRE(board.at(7, 3) == PieceColor::NONE);
        REQUIRE(board.at(7, 4) == PieceColor::NONE);
        REQUIRE(board.at(7, 5) == PieceColor::NONE);
        REQUIRE(board.at(7, 6) == PieceColor::NONE);
        REQUIRE(board.at(7, 7) == PieceColor::NONE);
        REQUIRE(board.at(7, 8) == PieceColor::NONE);
        REQUIRE(board.at(7, 9) == PieceColor::NONE);
        REQUIRE(board.at(7, 10) == PieceColor::NONE);
        REQUIRE(board.at(7, 11) == PieceColor::NONE);
        REQUIRE(board.at(7, 12) == PieceColor::NONE);
        REQUIRE(board.at(7, 13) == PieceColor::NONE);
        REQUIRE(board.at(7, 14) == PieceColor::NONE);
        REQUIRE(board.at(7, 15) == PieceColor::NONE);
        REQUIRE(board.at(7, 16) == PieceColor::NONE);
        REQUIRE(board.at(7, 17) == PieceColor::NONE);
        REQUIRE(board.at(7, 18) == PieceColor::NONE);
        REQUIRE(board.at(7, 19) == PieceColor::NONE);
        REQUIRE(board.at(8, 0) == PieceColor::NONE);
        REQUIRE(board.at(8, 1) == PieceColor::NONE);
        REQUIRE(board.at(8, 2) == PieceColor::NONE);
        REQUIRE(board.at(8, 3) == PieceColor::NONE);
        REQUIRE(board.at(8, 4) == PieceColor::NONE);
        REQUIRE(board.at(8, 5) == PieceColor::NONE);
        REQUIRE(board.at(8, 6) == PieceColor::NONE);
        REQUIRE(board.at(8, 7) == PieceColor::NONE);
        REQUIRE(board.at(8, 8) == PieceColor::NONE);
        REQUIRE(board.at(8, 9) == PieceColor::NONE);
        REQUIRE(board.at(8, 10) == PieceColor::NONE);
        REQUIRE(board.at(8, 11) == PieceColor::NONE);
        REQUIRE(board.at(8, 12) == PieceColor::NONE);
        REQUIRE(board.at(8, 13) == PieceColor::NONE);
        REQUIRE(board.at(8, 14) == PieceColor::NONE);
        REQUIRE(board.at(8, 15) == PieceColor::NONE);
        REQUIRE(board.at(8, 16) == PieceColor::NONE);
        REQUIRE(board.at(8, 17) == PieceColor::NONE);
        REQUIRE(board.at(8, 18) == PieceColor::NONE);
        REQUIRE(board.at(8, 19) == PieceColor::NONE);
        REQUIRE(board.at(9, 0) == PieceColor::NONE);
        REQUIRE(board.at(9, 1) == PieceColor::NONE);
        REQUIRE(board.at(9, 2) == PieceColor::NONE);
        REQUIRE(board.at(9, 3) == PieceColor::NONE);
        REQUIRE(board.at(9, 4) == PieceColor::NONE);
        REQUIRE(board.at(9, 5) == PieceColor::NONE);
        REQUIRE(board.at(9, 6) == PieceColor::NONE);
        REQUIRE(board.at(9, 7) == PieceColor::NONE);
        REQUIRE(board.at(9, 8) == PieceColor::NONE);
        REQUIRE(board.at(9, 9) == PieceColor::NONE);
        REQUIRE(board.at(9, 10) == PieceColor::NONE);
        REQUIRE(board.at(9, 11) == PieceColor::NONE);
        REQUIRE(board.at(9, 12) == PieceColor::NONE);
        REQUIRE(board.at(9, 13) == PieceColor::NONE);
        REQUIRE(board.at(9, 14) == PieceColor::NONE);
        REQUIRE(board.at(9, 15) == PieceColor::NONE);
        REQUIRE(board.at(9, 16) == PieceColor::NONE);
        REQUIRE(board.at(9, 17) == PieceColor::NONE);
        REQUIRE(board.at(9, 18) == PieceColor::NONE);
        REQUIRE(board.at(9, 19) == PieceColor::NONE);
        REQUIRE(board.at(10, 0) == PieceColor::NONE);
        REQUIRE(board.at(10, 1) == PieceColor::NONE);
        REQUIRE(board.at(10, 2) == PieceColor::NONE);
        REQUIRE(board.at(10, 3) == PieceColor::NONE);
        REQUIRE(board.at(10, 4) == PieceColor::NONE);
        REQUIRE(board.at(10, 5) == PieceColor::NONE);
        REQUIRE(board.at(10, 6) == PieceColor::NONE);
        REQUIRE(board.at(10, 7) == PieceColor::NONE);
        REQUIRE(board.at(10, 8) == PieceColor::NONE);
        REQUIRE(board.at(10, 9) == PieceColor::NONE);
        REQUIRE(board.at(10, 10) == PieceColor::NONE);
        REQUIRE(board.at(10, 11) == PieceColor::NONE);
        REQUIRE(board.at(10, 12) == PieceColor::NONE);
        REQUIRE(board.at(10, 13) == PieceColor::NONE);
        REQUIRE(board.at(10, 14) == PieceColor::NONE);
        REQUIRE(board.at(10, 15) == PieceColor::NONE);
        REQUIRE(board.at(10, 16) == PieceColor::NONE);
        REQUIRE(board.at(10, 17) == PieceColor::NONE);
        REQUIRE(board.at(10, 18) == PieceColor::NONE);
        REQUIRE(board.at(10, 19) == PieceColor::NONE);
        REQUIRE(board.at(11, 0) == PieceColor::NONE);
        REQUIRE(board.at(11, 1) == PieceColor::NONE);
        REQUIRE(board.at(11, 2) == PieceColor::NONE);
        REQUIRE(board.at(11, 3) == PieceColor::NONE);
        REQUIRE(board.at(11, 4) == PieceColor::NONE);
        REQUIRE(board.at(11, 5) == PieceColor::NONE);
        REQUIRE(board.at(11, 6) == PieceColor::NONE);
        REQUIRE(board.at(11, 7) == PieceColor::NONE);
        REQUIRE(board.at(11, 8) == PieceColor::NONE);
        REQUIRE(board.at(11, 9) == PieceColor::NONE);
        REQUIRE(board.at(11, 10) == PieceColor::NONE);
        REQUIRE(board.at(11, 11) == PieceColor::NONE);
        REQUIRE(board.at(11, 12) == PieceColor::NONE);
        REQUIRE(board.at(11, 13) == PieceColor::NONE);
        REQUIRE(board.at(11, 14) == PieceColor::NONE);
        REQUIRE(board.at(11, 15) == PieceColor::NONE);
        REQUIRE(board.at(11, 16) == PieceColor::NONE);
        REQUIRE(board.at(11, 17) == PieceColor::NONE);
        REQUIRE(board.at(11, 18) == PieceColor::NONE);
        REQUIRE(board.at(11, 19) == PieceColor::NONE);
        REQUIRE(board.at(12, 0) == PieceColor::NONE);
        REQUIRE(board.at(12, 1) == PieceColor::NONE);
        REQUIRE(board.at(12, 2) == PieceColor::NONE);
        REQUIRE(board.at(12, 3) == PieceColor::NONE);
        REQUIRE(board.at(12, 4) == PieceColor::NONE);
        REQUIRE(board.at(12, 5) == PieceColor::NONE);
        REQUIRE(board.at(12, 6) == PieceColor::NONE);
        REQUIRE(board.at(12, 7) == PieceColor::NONE);
        REQUIRE(board.at(12, 8) == PieceColor::NONE);
        REQUIRE(board.at(12, 9) == PieceColor::NONE);
        REQUIRE(board.at(12, 10) == PieceColor::NONE);
        REQUIRE(board.at(12, 11) == PieceColor::NONE);
        REQUIRE(board.at(12, 12) == PieceColor::NONE);
        REQUIRE(board.at(12, 13) == PieceColor::NONE);
        REQUIRE(board.at(12, 14) == PieceColor::NONE);
        REQUIRE(board.at(12, 15) == PieceColor::NONE);
        REQUIRE(board.at(12, 16) == PieceColor::NONE);
        REQUIRE(board.at(12, 17) == PieceColor::NONE);
        REQUIRE(board.at(12, 18) == PieceColor::NONE);
        REQUIRE(board.at(12, 19) == PieceColor::NONE);
        REQUIRE(board.at(13, 0) == PieceColor::NONE);
        REQUIRE(board.at(13, 1) == PieceColor::NONE);
        REQUIRE(board.at(13, 2) == PieceColor::NONE);
        REQUIRE(board.at(13, 3) == PieceColor::NONE);
        REQUIRE(board.at(13, 4) == PieceColor::NONE);
        REQUIRE(board.at(13, 5) == PieceColor::NONE);
        REQUIRE(board.at(13, 6) == PieceColor::NONE);
        REQUIRE(board.at(13, 7) == PieceColor::NONE);
        REQUIRE(board.at(13, 8) == PieceColor::NONE);
        REQUIRE(board.at(13, 9) == PieceColor::NONE);
        REQUIRE(board.at(13, 10) == PieceColor::NONE);
        REQUIRE(board.at(13, 11) == PieceColor::NONE);
        REQUIRE(board.at(13, 12) == PieceColor::NONE);
        REQUIRE(board.at(13, 13) == PieceColor::NONE);
        REQUIRE(board.at(13, 14) == PieceColor::NONE);
        REQUIRE(board.at(13, 15) == PieceColor::NONE);
        REQUIRE(board.at(13, 16) == PieceColor::NONE);
        REQUIRE(board.at(13, 17) == PieceColor::NONE);
        REQUIRE(board.at(13, 18) == PieceColor::NONE);
        REQUIRE(board.at(13, 19) == PieceColor::NONE);
        REQUIRE(board.at(14, 0) == PieceColor::NONE);
        REQUIRE(board.at(14, 1) == PieceColor::NONE);
        REQUIRE(board.at(14, 2) == PieceColor::NONE);
        REQUIRE(board.at(14, 3) == PieceColor::NONE);
        REQUIRE(board.at(14, 4) == PieceColor::NONE);
        REQUIRE(board.at(14, 5) == PieceColor::NONE);
        REQUIRE(board.at(14, 6) == PieceColor::NONE);
        REQUIRE(board.at(14, 7) == PieceColor::NONE);
        REQUIRE(board.at(14, 8) == PieceColor::NONE);
        REQUIRE(board.at(14, 9) == PieceColor::NONE);
        REQUIRE(board.at(14, 10) == PieceColor::NONE);
        REQUIRE(board.at(14, 11) == PieceColor::NONE);
        REQUIRE(board.at(14, 12) == PieceColor::NONE);
        REQUIRE(board.at(14, 13) == PieceColor::NONE);
        REQUIRE(board.at(14, 14) == PieceColor::NONE);
        REQUIRE(board.at(14, 15) == PieceColor::NONE);
        REQUIRE(board.at(14, 16) == PieceColor::NONE);
        REQUIRE(board.at(14, 17) == PieceColor::NONE);
        REQUIRE(board.at(14, 18) == PieceColor::NONE);
        REQUIRE(board.at(14, 19) == PieceColor::NONE);
        REQUIRE(board.at(15, 0) == PieceColor::NONE);
        REQUIRE(board.at(15, 1) == PieceColor::NONE);
        REQUIRE(board.at(15, 2) == PieceColor::NONE);
        REQUIRE(board.at(15, 3) == PieceColor::NONE);
        REQUIRE(board.at(15, 4) == PieceColor::NONE);
        REQUIRE(board.at(15, 5) == PieceColor::NONE);
        REQUIRE(board.at(15, 6) == PieceColor::NONE);
        REQUIRE(board.at(15, 7) == PieceColor::NONE);
        REQUIRE(board.at(15, 8) == PieceColor::NONE);
        REQUIRE(board.at(15, 9) == PieceColor::NONE);
        REQUIRE(board.at(15, 10) == PieceColor::NONE);
        REQUIRE(board.at(15, 11) == PieceColor::NONE);
        REQUIRE(board.at(15, 12) == PieceColor::NONE);
        REQUIRE(board.at(15, 13) == PieceColor::NONE);
        REQUIRE(board.at(15, 14) == PieceColor::NONE);
        REQUIRE(board.at(15, 15) == PieceColor::NONE);
        REQUIRE(board.at(15, 16) == PieceColor::NONE);
        REQUIRE(board.at(15, 17) == PieceColor::NONE);
        REQUIRE(board.at(15, 18) == PieceColor::NONE);
        REQUIRE(board.at(15, 19) == PieceColor::NONE);
        REQUIRE(board.at(16, 0) == PieceColor::NONE);
        REQUIRE(board.at(16, 1) == PieceColor::NONE);
        REQUIRE(board.at(16, 2) == PieceColor::NONE);
        REQUIRE(board.at(16, 3) == PieceColor::NONE);
        REQUIRE(board.at(16, 4) == PieceColor::NONE);
        REQUIRE(board.at(16, 5) == PieceColor::NONE);
        REQUIRE(board.at(16, 6) == PieceColor::NONE);
        REQUIRE(board.at(16, 7) == PieceColor::NONE);
        REQUIRE(board.at(16, 8) == PieceColor::NONE);
        REQUIRE(board.at(16, 9) == PieceColor::NONE);
        REQUIRE(board.at(16, 10) == PieceColor::NONE);
        REQUIRE(board.at(16, 11) == PieceColor::NONE);
        REQUIRE(board.at(16, 12) == PieceColor::NONE);
        REQUIRE(board.at(16, 13) == PieceColor::NONE);
        REQUIRE(board.at(16, 14) == PieceColor::NONE);
        REQUIRE(board.at(16, 15) == PieceColor::NONE);
        REQUIRE(board.at(16, 16) == PieceColor::NONE);
        REQUIRE(board.at(16, 17) == PieceColor::NONE);
        REQUIRE(board.at(16, 18) == PieceColor::NONE);
        REQUIRE(board.at(16, 19) == PieceColor::NONE);
        REQUIRE(board.at(17, 0) == PieceColor::NONE);
        REQUIRE(board.at(17, 1) == PieceColor::NONE);
        REQUIRE(board.at(17, 2) == PieceColor::NONE);
        REQUIRE(board.at(17, 3) == PieceColor::NONE);
        REQUIRE(board.at(17, 4) == PieceColor::NONE);
        REQUIRE(board.at(17, 5) == PieceColor::NONE);
        REQUIRE(board.at(17, 6) == PieceColor::NONE);
        REQUIRE(board.at(17, 7) == PieceColor::NONE);
        REQUIRE(board.at(17, 8) == PieceColor::NONE);
        REQUIRE(board.at(17, 9) == PieceColor::NONE);
        REQUIRE(board.at(17, 10) == PieceColor::NONE);
        REQUIRE(board.at(17, 11) == PieceColor::NONE);
        REQUIRE(board.at(17, 12) == PieceColor::NONE);
        REQUIRE(board.at(17, 13) == PieceColor::NONE);
        REQUIRE(board.at(17, 14) == PieceColor::NONE);
        REQUIRE(board.at(17, 15) == PieceColor::NONE);
        REQUIRE(board.at(17, 16) == PieceColor::NONE);
        REQUIRE(board.at(17, 17) == PieceColor::NONE);
        REQUIRE(board.at(17, 18) == PieceColor::NONE);
        REQUIRE(board.at(17, 19) == PieceColor::NONE);
        REQUIRE(board.at(18, 0) == PieceColor::NONE);
        REQUIRE(board.at(18, 1) == PieceColor::NONE);
        REQUIRE(board.at(18, 2) == PieceColor::NONE);
        REQUIRE(board.at(18, 3) == PieceColor::NONE);
        REQUIRE(board.at(18, 4) == PieceColor::NONE);
        REQUIRE(board.at(18, 5) == PieceColor::NONE);
        REQUIRE(board.at(18, 6) == PieceColor::NONE);
        REQUIRE(board.at(18, 7) == PieceColor::NONE);
        REQUIRE(board.at(18, 8) == PieceColor::NONE);
        REQUIRE(board.at(18, 9) == PieceColor::NONE);
        REQUIRE(board.at(18, 10) == PieceColor::NONE);
        REQUIRE(board.at(18, 11) == PieceColor::NONE);
        REQUIRE(board.at(18, 12) == PieceColor::NONE);
        REQUIRE(board.at(18, 13) == PieceColor::NONE);
        REQUIRE(board.at(18, 14) == PieceColor::NONE);
        REQUIRE(board.at(18, 15) == PieceColor::NONE);
        REQUIRE(board.at(18, 16) == PieceColor::NONE);
        REQUIRE(board.at(18, 17) == PieceColor::NONE);
        REQUIRE(board.at(18, 18) == PieceColor::NONE);
        REQUIRE(board.at(18, 19) == PieceColor::NONE);
        REQUIRE(board.at(19, 0) == PieceColor::NONE);
        REQUIRE(board.at(19, 1) == PieceColor::NONE);
        REQUIRE(board.at(19, 2) == PieceColor::NONE);
        REQUIRE(board.at(19, 3) == PieceColor::NONE);
        REQUIRE(board.at(19, 4) == PieceColor::NONE);
        REQUIRE(board.at(19, 5) == PieceColor::NONE);
        REQUIRE(board.at(19, 6) == PieceColor::NONE);
        REQUIRE(board.at(19, 7) == PieceColor::NONE);
        REQUIRE(board.at(19, 8) == PieceColor::NONE);
        REQUIRE(board.at(19, 9) == PieceColor::NONE);
        REQUIRE(board.at(19, 10) == PieceColor::NONE);
        REQUIRE(board.at(19, 11) == PieceColor::NONE);
        REQUIRE(board.at(19, 12) == PieceColor::NONE);
        REQUIRE(board.at(19, 13) == PieceColor::NONE);
        REQUIRE(board.at(19, 14) == PieceColor::NONE);
        REQUIRE(board.at(19, 15) == PieceColor::NONE);
        REQUIRE(board.at(19, 16) == PieceColor::NONE);
        REQUIRE(board.at(19, 17) == PieceColor::NONE);
        REQUIRE(board.at(19, 18) == PieceColor::NONE);
        REQUIRE(board.at(19, 19) == PieceColor::NONE);
        #pragma endregion
    }

    SECTION("Can parse small consistent replay") {
        #pragma region InpSmallReplay
        inp =   "startPiece:PENTO_U\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"BLUE\" kind=\"PENTO_U\" rotation=\"NONE\" isFlipped=\"false\"><position x=\"0\" y=\"0\"/></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"YELLOW\" kind=\"PENTO_U\" rotation=\"NONE\" isFlipped=\"false\"><position x=\"17\" y=\"0\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"RED\" kind=\"PENTO_U\" rotation=\"NONE\" isFlipped=\"false\"><position x=\"0\" y=\"18\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"GREEN\" kind=\"PENTO_U\" rotation=\"NONE\" isFlipped=\"false\"><position x=\"17\" y=\"18\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"BLUE\" kind=\"PENTO_S\" rotation=\"LEFT\" isFlipped=\"true\"><position x=\"2\" y=\"2\" /></piece></data>";
        #pragma endregion
        parser.splitAndParseReplay(inp, result);

        REQUIRE(result.size() == 5);
        for (const auto msg : result) {
            REQUIRE(msg.type == MsgType::GAMESTATE);
            auto payload = std::any_cast<MementoMsg>(msg.payload);
            state.updateWithMemento(payload);
        }

        const auto& gState = state.getManagedState();
        REQUIRE(gState.initialPiece == 10);
        REQUIRE(gState.getTurn() == 4);
        REQUIRE(gState.getCurrentPieceColor() == PieceColor::BLUE);

        const auto& board = gState.getBoard();
        #pragma region BoardRequires
        REQUIRE(board.at(0, 0) == PieceColor::BLUE);
        REQUIRE(board.at(0, 1) == PieceColor::BLUE);
        REQUIRE(board.at(0, 2) == PieceColor::NONE);
        REQUIRE(board.at(0, 3) == PieceColor::NONE);
        REQUIRE(board.at(0, 4) == PieceColor::NONE);
        REQUIRE(board.at(0, 5) == PieceColor::NONE);
        REQUIRE(board.at(0, 6) == PieceColor::NONE);
        REQUIRE(board.at(0, 7) == PieceColor::NONE);
        REQUIRE(board.at(0, 8) == PieceColor::NONE);
        REQUIRE(board.at(0, 9) == PieceColor::NONE);
        REQUIRE(board.at(0, 10) == PieceColor::NONE);
        REQUIRE(board.at(0, 11) == PieceColor::NONE);
        REQUIRE(board.at(0, 12) == PieceColor::NONE);
        REQUIRE(board.at(0, 13) == PieceColor::NONE);
        REQUIRE(board.at(0, 14) == PieceColor::NONE);
        REQUIRE(board.at(0, 15) == PieceColor::NONE);
        REQUIRE(board.at(0, 16) == PieceColor::NONE);
        REQUIRE(board.at(0, 17) == PieceColor::NONE);
        REQUIRE(board.at(0, 18) == PieceColor::RED);
        REQUIRE(board.at(0, 19) == PieceColor::RED);
        REQUIRE(board.at(1, 0) == PieceColor::NONE);
        REQUIRE(board.at(1, 1) == PieceColor::BLUE);
        REQUIRE(board.at(1, 2) == PieceColor::NONE);
        REQUIRE(board.at(1, 3) == PieceColor::NONE);
        REQUIRE(board.at(1, 4) == PieceColor::NONE);
        REQUIRE(board.at(1, 5) == PieceColor::NONE);
        REQUIRE(board.at(1, 6) == PieceColor::NONE);
        REQUIRE(board.at(1, 7) == PieceColor::NONE);
        REQUIRE(board.at(1, 8) == PieceColor::NONE);
        REQUIRE(board.at(1, 9) == PieceColor::NONE);
        REQUIRE(board.at(1, 10) == PieceColor::NONE);
        REQUIRE(board.at(1, 11) == PieceColor::NONE);
        REQUIRE(board.at(1, 12) == PieceColor::NONE);
        REQUIRE(board.at(1, 13) == PieceColor::NONE);
        REQUIRE(board.at(1, 14) == PieceColor::NONE);
        REQUIRE(board.at(1, 15) == PieceColor::NONE);
        REQUIRE(board.at(1, 16) == PieceColor::NONE);
        REQUIRE(board.at(1, 17) == PieceColor::NONE);
        REQUIRE(board.at(1, 18) == PieceColor::NONE);
        REQUIRE(board.at(1, 19) == PieceColor::RED);
        REQUIRE(board.at(2, 0) == PieceColor::BLUE);
        REQUIRE(board.at(2, 1) == PieceColor::BLUE);
        REQUIRE(board.at(2, 2) == PieceColor::NONE);
        REQUIRE(board.at(2, 3) == PieceColor::NONE);
        REQUIRE(board.at(2, 4) == PieceColor::NONE);
        REQUIRE(board.at(2, 5) == PieceColor::NONE);
        REQUIRE(board.at(2, 6) == PieceColor::NONE);
        REQUIRE(board.at(2, 7) == PieceColor::NONE);
        REQUIRE(board.at(2, 8) == PieceColor::NONE);
        REQUIRE(board.at(2, 9) == PieceColor::NONE);
        REQUIRE(board.at(2, 10) == PieceColor::NONE);
        REQUIRE(board.at(2, 11) == PieceColor::NONE);
        REQUIRE(board.at(2, 12) == PieceColor::NONE);
        REQUIRE(board.at(2, 13) == PieceColor::NONE);
        REQUIRE(board.at(2, 14) == PieceColor::NONE);
        REQUIRE(board.at(2, 15) == PieceColor::NONE);
        REQUIRE(board.at(2, 16) == PieceColor::NONE);
        REQUIRE(board.at(2, 17) == PieceColor::NONE);
        REQUIRE(board.at(2, 18) == PieceColor::RED);
        REQUIRE(board.at(2, 19) == PieceColor::RED);
        REQUIRE(board.at(3, 0) == PieceColor::NONE);
        REQUIRE(board.at(3, 1) == PieceColor::NONE);
        REQUIRE(board.at(3, 2) == PieceColor::NONE);
        REQUIRE(board.at(3, 3) == PieceColor::NONE);
        REQUIRE(board.at(3, 4) == PieceColor::NONE);
        REQUIRE(board.at(3, 5) == PieceColor::NONE);
        REQUIRE(board.at(3, 6) == PieceColor::NONE);
        REQUIRE(board.at(3, 7) == PieceColor::NONE);
        REQUIRE(board.at(3, 8) == PieceColor::NONE);
        REQUIRE(board.at(3, 9) == PieceColor::NONE);
        REQUIRE(board.at(3, 10) == PieceColor::NONE);
        REQUIRE(board.at(3, 11) == PieceColor::NONE);
        REQUIRE(board.at(3, 12) == PieceColor::NONE);
        REQUIRE(board.at(3, 13) == PieceColor::NONE);
        REQUIRE(board.at(3, 14) == PieceColor::NONE);
        REQUIRE(board.at(3, 15) == PieceColor::NONE);
        REQUIRE(board.at(3, 16) == PieceColor::NONE);
        REQUIRE(board.at(3, 17) == PieceColor::NONE);
        REQUIRE(board.at(3, 18) == PieceColor::NONE);
        REQUIRE(board.at(3, 19) == PieceColor::NONE);
        REQUIRE(board.at(4, 0) == PieceColor::NONE);
        REQUIRE(board.at(4, 1) == PieceColor::NONE);
        REQUIRE(board.at(4, 2) == PieceColor::NONE);
        REQUIRE(board.at(4, 3) == PieceColor::NONE);
        REQUIRE(board.at(4, 4) == PieceColor::NONE);
        REQUIRE(board.at(4, 5) == PieceColor::NONE);
        REQUIRE(board.at(4, 6) == PieceColor::NONE);
        REQUIRE(board.at(4, 7) == PieceColor::NONE);
        REQUIRE(board.at(4, 8) == PieceColor::NONE);
        REQUIRE(board.at(4, 9) == PieceColor::NONE);
        REQUIRE(board.at(4, 10) == PieceColor::NONE);
        REQUIRE(board.at(4, 11) == PieceColor::NONE);
        REQUIRE(board.at(4, 12) == PieceColor::NONE);
        REQUIRE(board.at(4, 13) == PieceColor::NONE);
        REQUIRE(board.at(4, 14) == PieceColor::NONE);
        REQUIRE(board.at(4, 15) == PieceColor::NONE);
        REQUIRE(board.at(4, 16) == PieceColor::NONE);
        REQUIRE(board.at(4, 17) == PieceColor::NONE);
        REQUIRE(board.at(4, 18) == PieceColor::NONE);
        REQUIRE(board.at(4, 19) == PieceColor::NONE);
        REQUIRE(board.at(5, 0) == PieceColor::NONE);
        REQUIRE(board.at(5, 1) == PieceColor::NONE);
        REQUIRE(board.at(5, 2) == PieceColor::NONE);
        REQUIRE(board.at(5, 3) == PieceColor::NONE);
        REQUIRE(board.at(5, 4) == PieceColor::NONE);
        REQUIRE(board.at(5, 5) == PieceColor::NONE);
        REQUIRE(board.at(5, 6) == PieceColor::NONE);
        REQUIRE(board.at(5, 7) == PieceColor::NONE);
        REQUIRE(board.at(5, 8) == PieceColor::NONE);
        REQUIRE(board.at(5, 9) == PieceColor::NONE);
        REQUIRE(board.at(5, 10) == PieceColor::NONE);
        REQUIRE(board.at(5, 11) == PieceColor::NONE);
        REQUIRE(board.at(5, 12) == PieceColor::NONE);
        REQUIRE(board.at(5, 13) == PieceColor::NONE);
        REQUIRE(board.at(5, 14) == PieceColor::NONE);
        REQUIRE(board.at(5, 15) == PieceColor::NONE);
        REQUIRE(board.at(5, 16) == PieceColor::NONE);
        REQUIRE(board.at(5, 17) == PieceColor::NONE);
        REQUIRE(board.at(5, 18) == PieceColor::NONE);
        REQUIRE(board.at(5, 19) == PieceColor::NONE);
        REQUIRE(board.at(6, 0) == PieceColor::NONE);
        REQUIRE(board.at(6, 1) == PieceColor::NONE);
        REQUIRE(board.at(6, 2) == PieceColor::NONE);
        REQUIRE(board.at(6, 3) == PieceColor::NONE);
        REQUIRE(board.at(6, 4) == PieceColor::NONE);
        REQUIRE(board.at(6, 5) == PieceColor::NONE);
        REQUIRE(board.at(6, 6) == PieceColor::NONE);
        REQUIRE(board.at(6, 7) == PieceColor::NONE);
        REQUIRE(board.at(6, 8) == PieceColor::NONE);
        REQUIRE(board.at(6, 9) == PieceColor::NONE);
        REQUIRE(board.at(6, 10) == PieceColor::NONE);
        REQUIRE(board.at(6, 11) == PieceColor::NONE);
        REQUIRE(board.at(6, 12) == PieceColor::NONE);
        REQUIRE(board.at(6, 13) == PieceColor::NONE);
        REQUIRE(board.at(6, 14) == PieceColor::NONE);
        REQUIRE(board.at(6, 15) == PieceColor::NONE);
        REQUIRE(board.at(6, 16) == PieceColor::NONE);
        REQUIRE(board.at(6, 17) == PieceColor::NONE);
        REQUIRE(board.at(6, 18) == PieceColor::NONE);
        REQUIRE(board.at(6, 19) == PieceColor::NONE);
        REQUIRE(board.at(7, 0) == PieceColor::NONE);
        REQUIRE(board.at(7, 1) == PieceColor::NONE);
        REQUIRE(board.at(7, 2) == PieceColor::NONE);
        REQUIRE(board.at(7, 3) == PieceColor::NONE);
        REQUIRE(board.at(7, 4) == PieceColor::NONE);
        REQUIRE(board.at(7, 5) == PieceColor::NONE);
        REQUIRE(board.at(7, 6) == PieceColor::NONE);
        REQUIRE(board.at(7, 7) == PieceColor::NONE);
        REQUIRE(board.at(7, 8) == PieceColor::NONE);
        REQUIRE(board.at(7, 9) == PieceColor::NONE);
        REQUIRE(board.at(7, 10) == PieceColor::NONE);
        REQUIRE(board.at(7, 11) == PieceColor::NONE);
        REQUIRE(board.at(7, 12) == PieceColor::NONE);
        REQUIRE(board.at(7, 13) == PieceColor::NONE);
        REQUIRE(board.at(7, 14) == PieceColor::NONE);
        REQUIRE(board.at(7, 15) == PieceColor::NONE);
        REQUIRE(board.at(7, 16) == PieceColor::NONE);
        REQUIRE(board.at(7, 17) == PieceColor::NONE);
        REQUIRE(board.at(7, 18) == PieceColor::NONE);
        REQUIRE(board.at(7, 19) == PieceColor::NONE);
        REQUIRE(board.at(8, 0) == PieceColor::NONE);
        REQUIRE(board.at(8, 1) == PieceColor::NONE);
        REQUIRE(board.at(8, 2) == PieceColor::NONE);
        REQUIRE(board.at(8, 3) == PieceColor::NONE);
        REQUIRE(board.at(8, 4) == PieceColor::NONE);
        REQUIRE(board.at(8, 5) == PieceColor::NONE);
        REQUIRE(board.at(8, 6) == PieceColor::NONE);
        REQUIRE(board.at(8, 7) == PieceColor::NONE);
        REQUIRE(board.at(8, 8) == PieceColor::NONE);
        REQUIRE(board.at(8, 9) == PieceColor::NONE);
        REQUIRE(board.at(8, 10) == PieceColor::NONE);
        REQUIRE(board.at(8, 11) == PieceColor::NONE);
        REQUIRE(board.at(8, 12) == PieceColor::NONE);
        REQUIRE(board.at(8, 13) == PieceColor::NONE);
        REQUIRE(board.at(8, 14) == PieceColor::NONE);
        REQUIRE(board.at(8, 15) == PieceColor::NONE);
        REQUIRE(board.at(8, 16) == PieceColor::NONE);
        REQUIRE(board.at(8, 17) == PieceColor::NONE);
        REQUIRE(board.at(8, 18) == PieceColor::NONE);
        REQUIRE(board.at(8, 19) == PieceColor::NONE);
        REQUIRE(board.at(9, 0) == PieceColor::NONE);
        REQUIRE(board.at(9, 1) == PieceColor::NONE);
        REQUIRE(board.at(9, 2) == PieceColor::NONE);
        REQUIRE(board.at(9, 3) == PieceColor::NONE);
        REQUIRE(board.at(9, 4) == PieceColor::NONE);
        REQUIRE(board.at(9, 5) == PieceColor::NONE);
        REQUIRE(board.at(9, 6) == PieceColor::NONE);
        REQUIRE(board.at(9, 7) == PieceColor::NONE);
        REQUIRE(board.at(9, 8) == PieceColor::NONE);
        REQUIRE(board.at(9, 9) == PieceColor::NONE);
        REQUIRE(board.at(9, 10) == PieceColor::NONE);
        REQUIRE(board.at(9, 11) == PieceColor::NONE);
        REQUIRE(board.at(9, 12) == PieceColor::NONE);
        REQUIRE(board.at(9, 13) == PieceColor::NONE);
        REQUIRE(board.at(9, 14) == PieceColor::NONE);
        REQUIRE(board.at(9, 15) == PieceColor::NONE);
        REQUIRE(board.at(9, 16) == PieceColor::NONE);
        REQUIRE(board.at(9, 17) == PieceColor::NONE);
        REQUIRE(board.at(9, 18) == PieceColor::NONE);
        REQUIRE(board.at(9, 19) == PieceColor::NONE);
        REQUIRE(board.at(10, 0) == PieceColor::NONE);
        REQUIRE(board.at(10, 1) == PieceColor::NONE);
        REQUIRE(board.at(10, 2) == PieceColor::NONE);
        REQUIRE(board.at(10, 3) == PieceColor::NONE);
        REQUIRE(board.at(10, 4) == PieceColor::NONE);
        REQUIRE(board.at(10, 5) == PieceColor::NONE);
        REQUIRE(board.at(10, 6) == PieceColor::NONE);
        REQUIRE(board.at(10, 7) == PieceColor::NONE);
        REQUIRE(board.at(10, 8) == PieceColor::NONE);
        REQUIRE(board.at(10, 9) == PieceColor::NONE);
        REQUIRE(board.at(10, 10) == PieceColor::NONE);
        REQUIRE(board.at(10, 11) == PieceColor::NONE);
        REQUIRE(board.at(10, 12) == PieceColor::NONE);
        REQUIRE(board.at(10, 13) == PieceColor::NONE);
        REQUIRE(board.at(10, 14) == PieceColor::NONE);
        REQUIRE(board.at(10, 15) == PieceColor::NONE);
        REQUIRE(board.at(10, 16) == PieceColor::NONE);
        REQUIRE(board.at(10, 17) == PieceColor::NONE);
        REQUIRE(board.at(10, 18) == PieceColor::NONE);
        REQUIRE(board.at(10, 19) == PieceColor::NONE);
        REQUIRE(board.at(11, 0) == PieceColor::NONE);
        REQUIRE(board.at(11, 1) == PieceColor::NONE);
        REQUIRE(board.at(11, 2) == PieceColor::NONE);
        REQUIRE(board.at(11, 3) == PieceColor::NONE);
        REQUIRE(board.at(11, 4) == PieceColor::NONE);
        REQUIRE(board.at(11, 5) == PieceColor::NONE);
        REQUIRE(board.at(11, 6) == PieceColor::NONE);
        REQUIRE(board.at(11, 7) == PieceColor::NONE);
        REQUIRE(board.at(11, 8) == PieceColor::NONE);
        REQUIRE(board.at(11, 9) == PieceColor::NONE);
        REQUIRE(board.at(11, 10) == PieceColor::NONE);
        REQUIRE(board.at(11, 11) == PieceColor::NONE);
        REQUIRE(board.at(11, 12) == PieceColor::NONE);
        REQUIRE(board.at(11, 13) == PieceColor::NONE);
        REQUIRE(board.at(11, 14) == PieceColor::NONE);
        REQUIRE(board.at(11, 15) == PieceColor::NONE);
        REQUIRE(board.at(11, 16) == PieceColor::NONE);
        REQUIRE(board.at(11, 17) == PieceColor::NONE);
        REQUIRE(board.at(11, 18) == PieceColor::NONE);
        REQUIRE(board.at(11, 19) == PieceColor::NONE);
        REQUIRE(board.at(12, 0) == PieceColor::NONE);
        REQUIRE(board.at(12, 1) == PieceColor::NONE);
        REQUIRE(board.at(12, 2) == PieceColor::NONE);
        REQUIRE(board.at(12, 3) == PieceColor::NONE);
        REQUIRE(board.at(12, 4) == PieceColor::NONE);
        REQUIRE(board.at(12, 5) == PieceColor::NONE);
        REQUIRE(board.at(12, 6) == PieceColor::NONE);
        REQUIRE(board.at(12, 7) == PieceColor::NONE);
        REQUIRE(board.at(12, 8) == PieceColor::NONE);
        REQUIRE(board.at(12, 9) == PieceColor::NONE);
        REQUIRE(board.at(12, 10) == PieceColor::NONE);
        REQUIRE(board.at(12, 11) == PieceColor::NONE);
        REQUIRE(board.at(12, 12) == PieceColor::NONE);
        REQUIRE(board.at(12, 13) == PieceColor::NONE);
        REQUIRE(board.at(12, 14) == PieceColor::NONE);
        REQUIRE(board.at(12, 15) == PieceColor::NONE);
        REQUIRE(board.at(12, 16) == PieceColor::NONE);
        REQUIRE(board.at(12, 17) == PieceColor::NONE);
        REQUIRE(board.at(12, 18) == PieceColor::NONE);
        REQUIRE(board.at(12, 19) == PieceColor::NONE);
        REQUIRE(board.at(13, 0) == PieceColor::NONE);
        REQUIRE(board.at(13, 1) == PieceColor::NONE);
        REQUIRE(board.at(13, 2) == PieceColor::NONE);
        REQUIRE(board.at(13, 3) == PieceColor::NONE);
        REQUIRE(board.at(13, 4) == PieceColor::NONE);
        REQUIRE(board.at(13, 5) == PieceColor::NONE);
        REQUIRE(board.at(13, 6) == PieceColor::NONE);
        REQUIRE(board.at(13, 7) == PieceColor::NONE);
        REQUIRE(board.at(13, 8) == PieceColor::NONE);
        REQUIRE(board.at(13, 9) == PieceColor::NONE);
        REQUIRE(board.at(13, 10) == PieceColor::NONE);
        REQUIRE(board.at(13, 11) == PieceColor::NONE);
        REQUIRE(board.at(13, 12) == PieceColor::NONE);
        REQUIRE(board.at(13, 13) == PieceColor::NONE);
        REQUIRE(board.at(13, 14) == PieceColor::NONE);
        REQUIRE(board.at(13, 15) == PieceColor::NONE);
        REQUIRE(board.at(13, 16) == PieceColor::NONE);
        REQUIRE(board.at(13, 17) == PieceColor::NONE);
        REQUIRE(board.at(13, 18) == PieceColor::NONE);
        REQUIRE(board.at(13, 19) == PieceColor::NONE);
        REQUIRE(board.at(14, 0) == PieceColor::NONE);
        REQUIRE(board.at(14, 1) == PieceColor::NONE);
        REQUIRE(board.at(14, 2) == PieceColor::NONE);
        REQUIRE(board.at(14, 3) == PieceColor::NONE);
        REQUIRE(board.at(14, 4) == PieceColor::NONE);
        REQUIRE(board.at(14, 5) == PieceColor::NONE);
        REQUIRE(board.at(14, 6) == PieceColor::NONE);
        REQUIRE(board.at(14, 7) == PieceColor::NONE);
        REQUIRE(board.at(14, 8) == PieceColor::NONE);
        REQUIRE(board.at(14, 9) == PieceColor::NONE);
        REQUIRE(board.at(14, 10) == PieceColor::NONE);
        REQUIRE(board.at(14, 11) == PieceColor::NONE);
        REQUIRE(board.at(14, 12) == PieceColor::NONE);
        REQUIRE(board.at(14, 13) == PieceColor::NONE);
        REQUIRE(board.at(14, 14) == PieceColor::NONE);
        REQUIRE(board.at(14, 15) == PieceColor::NONE);
        REQUIRE(board.at(14, 16) == PieceColor::NONE);
        REQUIRE(board.at(14, 17) == PieceColor::NONE);
        REQUIRE(board.at(14, 18) == PieceColor::NONE);
        REQUIRE(board.at(14, 19) == PieceColor::NONE);
        REQUIRE(board.at(15, 0) == PieceColor::NONE);
        REQUIRE(board.at(15, 1) == PieceColor::NONE);
        REQUIRE(board.at(15, 2) == PieceColor::NONE);
        REQUIRE(board.at(15, 3) == PieceColor::NONE);
        REQUIRE(board.at(15, 4) == PieceColor::NONE);
        REQUIRE(board.at(15, 5) == PieceColor::NONE);
        REQUIRE(board.at(15, 6) == PieceColor::NONE);
        REQUIRE(board.at(15, 7) == PieceColor::NONE);
        REQUIRE(board.at(15, 8) == PieceColor::NONE);
        REQUIRE(board.at(15, 9) == PieceColor::NONE);
        REQUIRE(board.at(15, 10) == PieceColor::NONE);
        REQUIRE(board.at(15, 11) == PieceColor::NONE);
        REQUIRE(board.at(15, 12) == PieceColor::NONE);
        REQUIRE(board.at(15, 13) == PieceColor::NONE);
        REQUIRE(board.at(15, 14) == PieceColor::NONE);
        REQUIRE(board.at(15, 15) == PieceColor::NONE);
        REQUIRE(board.at(15, 16) == PieceColor::NONE);
        REQUIRE(board.at(15, 17) == PieceColor::NONE);
        REQUIRE(board.at(15, 18) == PieceColor::NONE);
        REQUIRE(board.at(15, 19) == PieceColor::NONE);
        REQUIRE(board.at(16, 0) == PieceColor::NONE);
        REQUIRE(board.at(16, 1) == PieceColor::NONE);
        REQUIRE(board.at(16, 2) == PieceColor::NONE);
        REQUIRE(board.at(16, 3) == PieceColor::NONE);
        REQUIRE(board.at(16, 4) == PieceColor::NONE);
        REQUIRE(board.at(16, 5) == PieceColor::NONE);
        REQUIRE(board.at(16, 6) == PieceColor::NONE);
        REQUIRE(board.at(16, 7) == PieceColor::NONE);
        REQUIRE(board.at(16, 8) == PieceColor::NONE);
        REQUIRE(board.at(16, 9) == PieceColor::NONE);
        REQUIRE(board.at(16, 10) == PieceColor::NONE);
        REQUIRE(board.at(16, 11) == PieceColor::NONE);
        REQUIRE(board.at(16, 12) == PieceColor::NONE);
        REQUIRE(board.at(16, 13) == PieceColor::NONE);
        REQUIRE(board.at(16, 14) == PieceColor::NONE);
        REQUIRE(board.at(16, 15) == PieceColor::NONE);
        REQUIRE(board.at(16, 16) == PieceColor::NONE);
        REQUIRE(board.at(16, 17) == PieceColor::NONE);
        REQUIRE(board.at(16, 18) == PieceColor::NONE);
        REQUIRE(board.at(16, 19) == PieceColor::NONE);
        REQUIRE(board.at(17, 0) == PieceColor::YELLOW);
        REQUIRE(board.at(17, 1) == PieceColor::YELLOW);
        REQUIRE(board.at(17, 2) == PieceColor::NONE);
        REQUIRE(board.at(17, 3) == PieceColor::NONE);
        REQUIRE(board.at(17, 4) == PieceColor::NONE);
        REQUIRE(board.at(17, 5) == PieceColor::NONE);
        REQUIRE(board.at(17, 6) == PieceColor::NONE);
        REQUIRE(board.at(17, 7) == PieceColor::NONE);
        REQUIRE(board.at(17, 8) == PieceColor::NONE);
        REQUIRE(board.at(17, 9) == PieceColor::NONE);
        REQUIRE(board.at(17, 10) == PieceColor::NONE);
        REQUIRE(board.at(17, 11) == PieceColor::NONE);
        REQUIRE(board.at(17, 12) == PieceColor::NONE);
        REQUIRE(board.at(17, 13) == PieceColor::NONE);
        REQUIRE(board.at(17, 14) == PieceColor::NONE);
        REQUIRE(board.at(17, 15) == PieceColor::NONE);
        REQUIRE(board.at(17, 16) == PieceColor::NONE);
        REQUIRE(board.at(17, 17) == PieceColor::NONE);
        REQUIRE(board.at(17, 18) == PieceColor::GREEN);
        REQUIRE(board.at(17, 19) == PieceColor::GREEN);
        REQUIRE(board.at(18, 0) == PieceColor::NONE);
        REQUIRE(board.at(18, 1) == PieceColor::YELLOW);
        REQUIRE(board.at(18, 2) == PieceColor::NONE);
        REQUIRE(board.at(18, 3) == PieceColor::NONE);
        REQUIRE(board.at(18, 4) == PieceColor::NONE);
        REQUIRE(board.at(18, 5) == PieceColor::NONE);
        REQUIRE(board.at(18, 6) == PieceColor::NONE);
        REQUIRE(board.at(18, 7) == PieceColor::NONE);
        REQUIRE(board.at(18, 8) == PieceColor::NONE);
        REQUIRE(board.at(18, 9) == PieceColor::NONE);
        REQUIRE(board.at(18, 10) == PieceColor::NONE);
        REQUIRE(board.at(18, 11) == PieceColor::NONE);
        REQUIRE(board.at(18, 12) == PieceColor::NONE);
        REQUIRE(board.at(18, 13) == PieceColor::NONE);
        REQUIRE(board.at(18, 14) == PieceColor::NONE);
        REQUIRE(board.at(18, 15) == PieceColor::NONE);
        REQUIRE(board.at(18, 16) == PieceColor::NONE);
        REQUIRE(board.at(18, 17) == PieceColor::NONE);
        REQUIRE(board.at(18, 18) == PieceColor::NONE);
        REQUIRE(board.at(18, 19) == PieceColor::GREEN);
        REQUIRE(board.at(19, 0) == PieceColor::YELLOW);
        REQUIRE(board.at(19, 1) == PieceColor::YELLOW);
        REQUIRE(board.at(19, 2) == PieceColor::NONE);
        REQUIRE(board.at(19, 3) == PieceColor::NONE);
        REQUIRE(board.at(19, 4) == PieceColor::NONE);
        REQUIRE(board.at(19, 5) == PieceColor::NONE);
        REQUIRE(board.at(19, 6) == PieceColor::NONE);
        REQUIRE(board.at(19, 7) == PieceColor::NONE);
        REQUIRE(board.at(19, 8) == PieceColor::NONE);
        REQUIRE(board.at(19, 9) == PieceColor::NONE);
        REQUIRE(board.at(19, 10) == PieceColor::NONE);
        REQUIRE(board.at(19, 11) == PieceColor::NONE);
        REQUIRE(board.at(19, 12) == PieceColor::NONE);
        REQUIRE(board.at(19, 13) == PieceColor::NONE);
        REQUIRE(board.at(19, 14) == PieceColor::NONE);
        REQUIRE(board.at(19, 15) == PieceColor::NONE);
        REQUIRE(board.at(19, 16) == PieceColor::NONE);
        REQUIRE(board.at(19, 17) == PieceColor::NONE);
        REQUIRE(board.at(19, 18) == PieceColor::GREEN);
        REQUIRE(board.at(19, 19) == PieceColor::GREEN);
        #pragma endregion
    }

    SECTION("Can parse complete game replay") {
        #pragma region InpSmallReplay
        inp =   "startPiece:PENTO_Z\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"BLUE\" kind=\"PENTO_Z\" rotation=\"NONE\" isFlipped=\"false\"><position x=\"0\" y=\"0\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"YELLOW\" kind=\"PENTO_Z\" rotation=\"RIGHT\" isFlipped=\"false\"><position x=\"17\" y=\"0\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"RED\" kind=\"PENTO_Z\" rotation=\"RIGHT\" isFlipped=\"false\"><position x=\"0\" y=\"17\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"GREEN\" kind=\"PENTO_Z\" rotation=\"NONE\" isFlipped=\"false\"><position x=\"17\" y=\"17\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"BLUE\" kind=\"PENTO_S\" rotation=\"LEFT\" isFlipped=\"true\"><position x=\"2\" y=\"3\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"YELLOW\" kind=\"PENTO_S\" rotation=\"LEFT\" isFlipped=\"true\"><position x=\"17\" y=\"3\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"RED\" kind=\"PENTO_S\" rotation=\"MIRROR\" isFlipped=\"false\"><position x=\"3\" y=\"18\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"GREEN\" kind=\"PENTO_S\" rotation=\"MIRROR\" isFlipped=\"true\"><position x=\"13\" y=\"17\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"BLUE\" kind=\"PENTO_T\" rotation=\"MIRROR\" isFlipped=\"false\"><position x=\"0\" y=\"7\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"YELLOW\" kind=\"PENTO_T\" rotation=\"MIRROR\" isFlipped=\"false\"><position x=\"17\" y=\"7\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"RED\" kind=\"PENTO_T\" rotation=\"MIRROR\" isFlipped=\"false\"><position x=\"7\" y=\"17\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"GREEN\" kind=\"PENTO_T\" rotation=\"NONE\" isFlipped=\"false\"><position x=\"11\" y=\"14\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"BLUE\" kind=\"PENTO_Y\" rotation=\"RIGHT\" isFlipped=\"true\"><position x=\"3\" y=\"6\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"YELLOW\" kind=\"PENTO_Y\" rotation=\"RIGHT\" isFlipped=\"true\"><position x=\"13\" y=\"2\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"RED\" kind=\"PENTO_Y\" rotation=\"MIRROR\" isFlipped=\"true\"><position x=\"0\" y=\"13\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"GREEN\" kind=\"PENTO_Y\" rotation=\"LEFT\" isFlipped=\"false\"><position x=\"13\" y=\"12\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"BLUE\" kind=\"PENTO_X\" rotation=\"NONE\" isFlipped=\"false\"><position x=\"2\" y=\"10\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"YELLOW\" kind=\"PENTO_X\" rotation=\"NONE\" isFlipped=\"false\"><position x=\"14\" y=\"9\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"RED\" kind=\"PENTO_X\" rotation=\"NONE\" isFlipped=\"false\"><position x=\"10\" y=\"17\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"GREEN\" kind=\"PENTO_X\" rotation=\"NONE\" isFlipped=\"false\"><position x=\"14\" y=\"14\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"BLUE\" kind=\"PENTO_R\" rotation=\"RIGHT\" isFlipped=\"true\"><position x=\"5\" y=\"10\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"YELLOW\" kind=\"PENTO_R\" rotation=\"RIGHT\" isFlipped=\"true\"><position x=\"10\" y=\"1\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"RED\" kind=\"PENTO_R\" rotation=\"LEFT\" isFlipped=\"false\"><position x=\"6\" y=\"14\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"GREEN\" kind=\"PENTO_R\" rotation=\"NONE\" isFlipped=\"false\"><position x=\"17\" y=\"10\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"BLUE\" kind=\"PENTO_W\" rotation=\"LEFT\" isFlipped=\"false\"><position x=\"5\" y=\"3\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"YELLOW\" kind=\"PENTO_W\" rotation=\"LEFT\" isFlipped=\"false\"><position x=\"7\" y=\"4\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"RED\" kind=\"PENTO_W\" rotation=\"NONE\" isFlipped=\"false\"><position x=\"8\" y=\"12\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"GREEN\" kind=\"PENTO_W\" rotation=\"NONE\" isFlipped=\"false\"><position x=\"10\" y=\"9\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"BLUE\" kind=\"PENTO_P\" rotation=\"NONE\" isFlipped=\"true\"><position x=\"8\" y=\"1\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"YELLOW\" kind=\"PENTO_P\" rotation=\"MIRROR\" isFlipped=\"false\"><position x=\"11\" y=\"4\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"RED\" kind=\"PENTO_P\" rotation=\"RIGHT\" isFlipped=\"true\"><position x=\"3\" y=\"13\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"GREEN\" kind=\"PENTO_P\" rotation=\"MIRROR\" isFlipped=\"false\"><position x=\"18\" y=\"13\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"BLUE\" kind=\"PENTO_V\" rotation=\"MIRROR\" isFlipped=\"false\"><position x=\"7\" y=\"8\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"YELLOW\" kind=\"PENTO_V\" rotation=\"NONE\" isFlipped=\"false\"><position x=\"14\" y=\"5\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"RED\" kind=\"PENTO_V\" rotation=\"RIGHT\" isFlipped=\"false\"><position x=\"0\" y=\"10\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"GREEN\" kind=\"PENTO_L\" rotation=\"RIGHT\" isFlipped=\"true\"><position x=\"8\" y=\"7\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"BLUE\" kind=\"PENTO_L\" rotation=\"RIGHT\" isFlipped=\"true\"><position x=\"10\" y=\"0\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"YELLOW\" kind=\"TETRO_Z\" rotation=\"RIGHT\" isFlipped=\"false\"><position x=\"12\" y=\"8\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"RED\" kind=\"PENTO_L\" rotation=\"LEFT\" isFlipped=\"true\"><position x=\"3\" y=\"8\" /></piece></data>\n" 
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"GREEN\" kind=\"TETRO_Z\" rotation=\"RIGHT\" isFlipped=\"true\"><position x=\"8\" y=\"10\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"BLUE\" kind=\"PENTO_U\" rotation=\"NONE\" isFlipped=\"false\"><position x=\"3\" y=\"0\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"YELLOW\" kind=\"TETRO_T\" rotation=\"NONE\" isFlipped=\"false\"><position x=\"14\" y=\"0\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"RED\" kind=\"DOMINO\" rotation=\"NONE\" isFlipped=\"false\"><position x=\"9\" y=\"16\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"GREEN\" kind=\"DOMINO\" rotation=\"NONE\" isFlipped=\"false\"><position x=\"12\" y=\"19\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"BLUE\" kind=\"TETRO_I\" rotation=\"NONE\" isFlipped=\"false\"><position x=\"2\" y=\"13\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"YELLOW\" kind=\"MONO\" rotation=\"NONE\" isFlipped=\"false\"><position x=\"8\" y=\"3\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"RED\" kind=\"TETRO_L\" rotation=\"LEFT\" isFlipped=\"false\"><position x=\"3\" y=\"15\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"GREEN\" kind=\"TRIO_L\" rotation=\"LEFT\" isFlipped=\"false\"><position x=\"6\" y=\"12\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"BLUE\" kind=\"DOMINO\" rotation=\"NONE\" isFlipped=\"false\"><position x=\"0\" y=\"17\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"YELLOW\" kind=\"TETRO_L\" rotation=\"MIRROR\" isFlipped=\"false\"><position x=\"6\" y=\"0\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"RED\" kind=\"TRIO_L\" rotation=\"RIGHT\" isFlipped=\"false\"><position x=\"11\" y=\"12\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"GREEN\" kind=\"MONO\" rotation=\"NONE\" isFlipped=\"false\"><position x=\"13\" y=\"10\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"BLUE\" kind=\"PENTO_I\" rotation=\"RIGHT\" isFlipped=\"false\"><position x=\"3\" y=\"17\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"YELLOW\" kind=\"TRIO_L\" rotation=\"RIGHT\" isFlipped=\"false\"><position x=\"5\" y=\"3\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"RED\" kind=\"MONO\" rotation=\"NONE\" isFlipped=\"false\"><position x=\"2\" y=\"7\" /></piece></data>\n"   
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"GREEN\" kind=\"PENTO_U\" rotation=\"MIRROR\" isFlipped=\"false\"><position x=\"14\" y=\"8\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"BLUE\" kind=\"TETRO_L\" rotation=\"MIRROR\" isFlipped=\"true\"><position x=\"10\" y=\"4\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"YELLOW\" kind=\"DOMINO\" rotation=\"NONE\" isFlipped=\"false\"><position x=\"3\" y=\"2\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"RED\" kind=\"TETRO_Z\" rotation=\"RIGHT\" isFlipped=\"false\"><position x=\"0\" y=\"5\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"GREEN\" kind=\"TRIO_I\" rotation=\"NONE\" isFlipped=\"false\"><position x=\"13\" y=\"5\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"BLUE\" kind=\"TETRO_T\" rotation=\"LEFT\" isFlipped=\"false\"><position x=\"0\" y=\"3\" /></piece></data>\n"
                "<fake class=\"sc.plugin2021.SkipMove\"><color>YELLOW</color></fake>\n"
                "<fake class=\"sc.plugin2021.SkipMove\"><color>RED</color></fake>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"GREEN\" kind=\"PENTO_V\" rotation=\"MIRROR\" isFlipped=\"false\"><position x=\"14\" y=\"4\" /></piece></data>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"BLUE\" kind=\"TRIO_I\" rotation=\"NONE\" isFlipped=\"false\"><position x=\"10\" y=\"11\" /></piece></data>\n"
                "<fake class=\"sc.plugin2021.SkipMove\"><color>YELLOW</color></fake>\n"
                "<fake class=\"sc.plugin2021.SkipMove\"><color>RED</color></fake>\n"
                "<fake class=\"sc.plugin2021.SkipMove\"><color>GREEN</color></fake>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"BLUE\" kind=\"MONO\" rotation=\"NONE\" isFlipped=\"false\"><position x=\"8\" y=\"16\" /></piece></data>\n" 
                "<fake class=\"sc.plugin2021.SkipMove\"><color>YELLOW</color></fake>\n"
                "<fake class=\"sc.plugin2021.SkipMove\"><color>RED</color></fake>\n"
                "<fake class=\"sc.plugin2021.SkipMove\"><color>GREEN</color></fake>\n"
                "<data class=\"sc.plugin2021.SetMove\"><piece color=\"BLUE\" kind=\"TRIO_L\" rotation=\"RIGHT\" isFlipped=\"false\"><position x=\"9\" y=\"17\" /></piece></data>\n"
                "<fake class=\"sc.plugin2021.SkipMove\"><color>YELLOW</color></fake>\n"
                "<fake class=\"sc.plugin2021.SkipMove\"><color>RED</color></fake>\n"
                "<fake class=\"sc.plugin2021.SkipMove\"><color>GREEN</color></fake>\n"
                "<fake class=\"sc.plugin2021.SkipMove\"><color>BLUE</color></fake>";
                // The last turn would not be generated by the replay system and is only here
                // because we pop the last turn as it would normally be send by the server on connect.
                // We want to test the whole game/board here though, which is why we added the 2x fake turn
        #pragma endregion
        parser.splitAndParseReplay(inp, result);

        REQUIRE(result.size() == 77);
        for (const auto msg : result) {
            REQUIRE(msg.type == MsgType::GAMESTATE);
            auto payload = std::any_cast<MementoMsg>(msg.payload);
            state.updateWithMemento(payload);
        }

        const auto& gState = state.getManagedState();
        REQUIRE(gState.initialPiece == 17);
        REQUIRE(gState.getTurn() == 76);
        REQUIRE(gState.getCurrentPieceColor() == PieceColor::BLUE);
        // We dont 'REQUIRE(gState.isGameOver() == true);' because of an optimization that would return false

        const auto& board = gState.getBoard();
        #pragma region BoardRequires
        REQUIRE(board.at(0, 0) == PieceColor::BLUE);
        REQUIRE(board.at(0, 1) == PieceColor::NONE);
        REQUIRE(board.at(0, 2) == PieceColor::NONE);
        REQUIRE(board.at(0, 3) == PieceColor::BLUE);
        REQUIRE(board.at(0, 4) == PieceColor::BLUE);
        REQUIRE(board.at(0, 5) == PieceColor::BLUE);
        REQUIRE(board.at(0, 6) == PieceColor::RED);
        REQUIRE(board.at(0, 7) == PieceColor::RED);
        REQUIRE(board.at(0, 8) == PieceColor::NONE);
        REQUIRE(board.at(0, 9) == PieceColor::BLUE);
        REQUIRE(board.at(0, 10) == PieceColor::RED);
        REQUIRE(board.at(0, 11) == PieceColor::RED);
        REQUIRE(board.at(0, 12) == PieceColor::RED);
        REQUIRE(board.at(0, 13) == PieceColor::NONE);
        REQUIRE(board.at(0, 14) == PieceColor::NONE);
        REQUIRE(board.at(0, 15) == PieceColor::RED);
        REQUIRE(board.at(0, 16) == PieceColor::NONE);
        REQUIRE(board.at(0, 17) == PieceColor::BLUE);
        REQUIRE(board.at(0, 18) == PieceColor::RED);
        REQUIRE(board.at(0, 19) == PieceColor::RED);
        REQUIRE(board.at(1, 0) == PieceColor::BLUE);
        REQUIRE(board.at(1, 1) == PieceColor::BLUE);
        REQUIRE(board.at(1, 2) == PieceColor::BLUE);
        REQUIRE(board.at(1, 3) == PieceColor::NONE);
        REQUIRE(board.at(1, 4) == PieceColor::BLUE);
        REQUIRE(board.at(1, 5) == PieceColor::RED);
        REQUIRE(board.at(1, 6) == PieceColor::RED);
        REQUIRE(board.at(1, 7) == PieceColor::BLUE);
        REQUIRE(board.at(1, 8) == PieceColor::BLUE);
        REQUIRE(board.at(1, 9) == PieceColor::BLUE);
        REQUIRE(board.at(1, 10) == PieceColor::RED);
        REQUIRE(board.at(1, 11) == PieceColor::NONE);
        REQUIRE(board.at(1, 12) == PieceColor::NONE);
        REQUIRE(board.at(1, 13) == PieceColor::RED);
        REQUIRE(board.at(1, 14) == PieceColor::RED);
        REQUIRE(board.at(1, 15) == PieceColor::RED);
        REQUIRE(board.at(1, 16) == PieceColor::RED);
        REQUIRE(board.at(1, 17) == PieceColor::BLUE);
        REQUIRE(board.at(1, 18) == PieceColor::RED);
        REQUIRE(board.at(1, 19) == PieceColor::NONE);
        REQUIRE(board.at(2, 0) == PieceColor::NONE);
        REQUIRE(board.at(2, 1) == PieceColor::NONE);
        REQUIRE(board.at(2, 2) == PieceColor::BLUE);
        REQUIRE(board.at(2, 3) == PieceColor::NONE);
        REQUIRE(board.at(2, 4) == PieceColor::NONE);
        REQUIRE(board.at(2, 5) == PieceColor::BLUE);
        REQUIRE(board.at(2, 6) == PieceColor::BLUE);
        REQUIRE(board.at(2, 7) == PieceColor::RED);
        REQUIRE(board.at(2, 8) == PieceColor::NONE);
        REQUIRE(board.at(2, 9) == PieceColor::BLUE);
        REQUIRE(board.at(2, 10) == PieceColor::RED);
        REQUIRE(board.at(2, 11) == PieceColor::BLUE);
        REQUIRE(board.at(2, 12) == PieceColor::NONE);
        REQUIRE(board.at(2, 13) == PieceColor::BLUE);
        REQUIRE(board.at(2, 14) == PieceColor::BLUE);
        REQUIRE(board.at(2, 15) == PieceColor::BLUE);
        REQUIRE(board.at(2, 16) == PieceColor::BLUE);
        REQUIRE(board.at(2, 17) == PieceColor::RED);
        REQUIRE(board.at(2, 18) == PieceColor::RED);
        REQUIRE(board.at(2, 19) == PieceColor::NONE);
        REQUIRE(board.at(3, 0) == PieceColor::BLUE);
        REQUIRE(board.at(3, 1) == PieceColor::BLUE);
        REQUIRE(board.at(3, 2) == PieceColor::YELLOW);
        REQUIRE(board.at(3, 3) == PieceColor::BLUE);
        REQUIRE(board.at(3, 4) == PieceColor::BLUE);
        REQUIRE(board.at(3, 5) == PieceColor::BLUE);
        REQUIRE(board.at(3, 6) == PieceColor::NONE);
        REQUIRE(board.at(3, 7) == PieceColor::BLUE);
        REQUIRE(board.at(3, 8) == PieceColor::RED);
        REQUIRE(board.at(3, 9) == PieceColor::RED);
        REQUIRE(board.at(3, 10) == PieceColor::BLUE);
        REQUIRE(board.at(3, 11) == PieceColor::BLUE);
        REQUIRE(board.at(3, 12) == PieceColor::BLUE);
        REQUIRE(board.at(3, 13) == PieceColor::RED);
        REQUIRE(board.at(3, 14) == PieceColor::RED);
        REQUIRE(board.at(3, 15) == PieceColor::NONE);
        REQUIRE(board.at(3, 16) == PieceColor::RED);
        REQUIRE(board.at(3, 17) == PieceColor::BLUE);
        REQUIRE(board.at(3, 18) == PieceColor::NONE);
        REQUIRE(board.at(3, 19) == PieceColor::RED);
        REQUIRE(board.at(4, 0) == PieceColor::NONE);
        REQUIRE(board.at(4, 1) == PieceColor::BLUE);
        REQUIRE(board.at(4, 2) == PieceColor::YELLOW);
        REQUIRE(board.at(4, 3) == PieceColor::NONE);
        REQUIRE(board.at(4, 4) == PieceColor::NONE);
        REQUIRE(board.at(4, 5) == PieceColor::NONE);
        REQUIRE(board.at(4, 6) == PieceColor::BLUE);
        REQUIRE(board.at(4, 7) == PieceColor::BLUE);
        REQUIRE(board.at(4, 8) == PieceColor::NONE);
        REQUIRE(board.at(4, 9) == PieceColor::RED);
        REQUIRE(board.at(4, 10) == PieceColor::NONE);
        REQUIRE(board.at(4, 11) == PieceColor::BLUE);
        REQUIRE(board.at(4, 12) == PieceColor::NONE);
        REQUIRE(board.at(4, 13) == PieceColor::RED);
        REQUIRE(board.at(4, 14) == PieceColor::RED);
        REQUIRE(board.at(4, 15) == PieceColor::NONE);
        REQUIRE(board.at(4, 16) == PieceColor::RED);
        REQUIRE(board.at(4, 17) == PieceColor::BLUE);
        REQUIRE(board.at(4, 18) == PieceColor::NONE);
        REQUIRE(board.at(4, 19) == PieceColor::RED);
        REQUIRE(board.at(5, 0) == PieceColor::BLUE);
        REQUIRE(board.at(5, 1) == PieceColor::BLUE);
        REQUIRE(board.at(5, 2) == PieceColor::NONE);
        REQUIRE(board.at(5, 3) == PieceColor::YELLOW);
        REQUIRE(board.at(5, 4) == PieceColor::YELLOW);
        REQUIRE(board.at(5, 5) == PieceColor::BLUE);
        REQUIRE(board.at(5, 6) == PieceColor::NONE);
        REQUIRE(board.at(5, 7) == PieceColor::BLUE);
        REQUIRE(board.at(5, 8) == PieceColor::NONE);
        REQUIRE(board.at(5, 9) == PieceColor::RED);
        REQUIRE(board.at(5, 10) == PieceColor::NONE);
        REQUIRE(board.at(5, 11) == PieceColor::NONE);
        REQUIRE(board.at(5, 12) == PieceColor::BLUE);
        REQUIRE(board.at(5, 13) == PieceColor::RED);
        REQUIRE(board.at(5, 14) == PieceColor::NONE);
        REQUIRE(board.at(5, 15) == PieceColor::RED);
        REQUIRE(board.at(5, 16) == PieceColor::RED);
        REQUIRE(board.at(5, 17) == PieceColor::BLUE);
        REQUIRE(board.at(5, 18) == PieceColor::RED);
        REQUIRE(board.at(5, 19) == PieceColor::RED);
        REQUIRE(board.at(6, 0) == PieceColor::YELLOW);
        REQUIRE(board.at(6, 1) == PieceColor::NONE);
        REQUIRE(board.at(6, 2) == PieceColor::NONE);
        REQUIRE(board.at(6, 3) == PieceColor::YELLOW);
        REQUIRE(board.at(6, 4) == PieceColor::BLUE);
        REQUIRE(board.at(6, 5) == PieceColor::BLUE);
        REQUIRE(board.at(6, 6) == PieceColor::NONE);
        REQUIRE(board.at(6, 7) == PieceColor::BLUE);
        REQUIRE(board.at(6, 8) == PieceColor::NONE);
        REQUIRE(board.at(6, 9) == PieceColor::RED);
        REQUIRE(board.at(6, 10) == PieceColor::BLUE);
        REQUIRE(board.at(6, 11) == PieceColor::BLUE);
        REQUIRE(board.at(6, 12) == PieceColor::BLUE);
        REQUIRE(board.at(6, 13) == PieceColor::GREEN);
        REQUIRE(board.at(6, 14) == PieceColor::RED);
        REQUIRE(board.at(6, 15) == PieceColor::NONE);
        REQUIRE(board.at(6, 16) == PieceColor::NONE);
        REQUIRE(board.at(6, 17) == PieceColor::BLUE);
        REQUIRE(board.at(6, 18) == PieceColor::RED);
        REQUIRE(board.at(6, 19) == PieceColor::NONE);
        REQUIRE(board.at(7, 0) == PieceColor::YELLOW);
        REQUIRE(board.at(7, 1) == PieceColor::YELLOW);
        REQUIRE(board.at(7, 2) == PieceColor::YELLOW);
        REQUIRE(board.at(7, 3) == PieceColor::BLUE);
        REQUIRE(board.at(7, 4) == PieceColor::BLUE);
        REQUIRE(board.at(7, 5) == PieceColor::NONE);
        REQUIRE(board.at(7, 6) == PieceColor::YELLOW);
        REQUIRE(board.at(7, 7) == PieceColor::NONE);
        REQUIRE(board.at(7, 8) == PieceColor::BLUE);
        REQUIRE(board.at(7, 9) == PieceColor::NONE);
        REQUIRE(board.at(7, 10) == PieceColor::NONE);
        REQUIRE(board.at(7, 11) == PieceColor::BLUE);
        REQUIRE(board.at(7, 12) == PieceColor::GREEN);
        REQUIRE(board.at(7, 13) == PieceColor::GREEN);
        REQUIRE(board.at(7, 14) == PieceColor::RED);
        REQUIRE(board.at(7, 15) == PieceColor::RED);
        REQUIRE(board.at(7, 16) == PieceColor::RED);
        REQUIRE(board.at(7, 17) == PieceColor::BLUE);
        REQUIRE(board.at(7, 18) == PieceColor::NONE);
        REQUIRE(board.at(7, 19) == PieceColor::RED);
        REQUIRE(board.at(8, 0) == PieceColor::NONE);
        REQUIRE(board.at(8, 1) == PieceColor::BLUE);
        REQUIRE(board.at(8, 2) == PieceColor::BLUE);
        REQUIRE(board.at(8, 3) == PieceColor::YELLOW);
        REQUIRE(board.at(8, 4) == PieceColor::NONE);
        REQUIRE(board.at(8, 5) == PieceColor::YELLOW);
        REQUIRE(board.at(8, 6) == PieceColor::YELLOW);
        REQUIRE(board.at(8, 7) == PieceColor::GREEN);
        REQUIRE(board.at(8, 8) == PieceColor::BLUE);
        REQUIRE(board.at(8, 9) == PieceColor::NONE);
        REQUIRE(board.at(8, 10) == PieceColor::GREEN);
        REQUIRE(board.at(8, 11) == PieceColor::GREEN);
        REQUIRE(board.at(8, 12) == PieceColor::RED);
        REQUIRE(board.at(8, 13) == PieceColor::RED);
        REQUIRE(board.at(8, 14) == PieceColor::NONE);
        REQUIRE(board.at(8, 15) == PieceColor::RED);
        REQUIRE(board.at(8, 16) == PieceColor::BLUE);
        REQUIRE(board.at(8, 17) == PieceColor::RED);
        REQUIRE(board.at(8, 18) == PieceColor::RED);
        REQUIRE(board.at(8, 19) == PieceColor::RED);
        REQUIRE(board.at(9, 0) == PieceColor::NONE);
        REQUIRE(board.at(9, 1) == PieceColor::BLUE);
        REQUIRE(board.at(9, 2) == PieceColor::BLUE);
        REQUIRE(board.at(9, 3) == PieceColor::BLUE);
        REQUIRE(board.at(9, 4) == PieceColor::YELLOW);
        REQUIRE(board.at(9, 5) == PieceColor::YELLOW);
        REQUIRE(board.at(9, 6) == PieceColor::NONE);
        REQUIRE(board.at(9, 7) == PieceColor::GREEN);
        REQUIRE(board.at(9, 8) == PieceColor::BLUE);
        REQUIRE(board.at(9, 9) == PieceColor::BLUE);
        REQUIRE(board.at(9, 10) == PieceColor::BLUE);
        REQUIRE(board.at(9, 11) == PieceColor::GREEN);
        REQUIRE(board.at(9, 12) == PieceColor::GREEN);
        REQUIRE(board.at(9, 13) == PieceColor::RED);
        REQUIRE(board.at(9, 14) == PieceColor::RED);
        REQUIRE(board.at(9, 15) == PieceColor::NONE);
        REQUIRE(board.at(9, 16) == PieceColor::RED);
        REQUIRE(board.at(9, 17) == PieceColor::BLUE);
        REQUIRE(board.at(9, 18) == PieceColor::BLUE);
        REQUIRE(board.at(9, 19) == PieceColor::RED);
        REQUIRE(board.at(10, 0) == PieceColor::BLUE);
        REQUIRE(board.at(10, 1) == PieceColor::NONE);
        REQUIRE(board.at(10, 2) == PieceColor::NONE);
        REQUIRE(board.at(10, 3) == PieceColor::YELLOW);
        REQUIRE(board.at(10, 4) == PieceColor::BLUE);
        REQUIRE(board.at(10, 5) == PieceColor::BLUE);
        REQUIRE(board.at(10, 6) == PieceColor::BLUE);
        REQUIRE(board.at(10, 7) == PieceColor::GREEN);
        REQUIRE(board.at(10, 8) == PieceColor::NONE);
        REQUIRE(board.at(10, 9) == PieceColor::GREEN);
        REQUIRE(board.at(10, 10) == PieceColor::GREEN);
        REQUIRE(board.at(10, 11) == PieceColor::BLUE);
        REQUIRE(board.at(10, 12) == PieceColor::BLUE);
        REQUIRE(board.at(10, 13) == PieceColor::BLUE);
        REQUIRE(board.at(10, 14) == PieceColor::RED);
        REQUIRE(board.at(10, 15) == PieceColor::NONE);
        REQUIRE(board.at(10, 16) == PieceColor::RED);
        REQUIRE(board.at(10, 17) == PieceColor::BLUE);
        REQUIRE(board.at(10, 18) == PieceColor::RED);
        REQUIRE(board.at(10, 19) == PieceColor::NONE);
        REQUIRE(board.at(11, 0) == PieceColor::BLUE);
        REQUIRE(board.at(11, 1) == PieceColor::YELLOW);
        REQUIRE(board.at(11, 2) == PieceColor::YELLOW);
        REQUIRE(board.at(11, 3) == PieceColor::YELLOW);
        REQUIRE(board.at(11, 4) == PieceColor::BLUE);
        REQUIRE(board.at(11, 5) == PieceColor::YELLOW);
        REQUIRE(board.at(11, 6) == PieceColor::YELLOW);
        REQUIRE(board.at(11, 7) == PieceColor::GREEN);
        REQUIRE(board.at(11, 8) == PieceColor::GREEN);
        REQUIRE(board.at(11, 9) == PieceColor::NONE);
        REQUIRE(board.at(11, 10) == PieceColor::GREEN);
        REQUIRE(board.at(11, 11) == PieceColor::GREEN);
        REQUIRE(board.at(11, 12) == PieceColor::RED);
        REQUIRE(board.at(11, 13) == PieceColor::RED);
        REQUIRE(board.at(11, 14) == PieceColor::GREEN);
        REQUIRE(board.at(11, 15) == PieceColor::NONE);
        REQUIRE(board.at(11, 16) == PieceColor::NONE);
        REQUIRE(board.at(11, 17) == PieceColor::RED);
        REQUIRE(board.at(11, 18) == PieceColor::RED);
        REQUIRE(board.at(11, 19) == PieceColor::RED);
        REQUIRE(board.at(12, 0) == PieceColor::BLUE);
        REQUIRE(board.at(12, 1) == PieceColor::NONE);
        REQUIRE(board.at(12, 2) == PieceColor::YELLOW);
        REQUIRE(board.at(12, 3) == PieceColor::NONE);
        REQUIRE(board.at(12, 4) == PieceColor::YELLOW);
        REQUIRE(board.at(12, 5) == PieceColor::YELLOW);
        REQUIRE(board.at(12, 6) == PieceColor::YELLOW);
        REQUIRE(board.at(12, 7) == PieceColor::NONE);
        REQUIRE(board.at(12, 8) == PieceColor::NONE);
        REQUIRE(board.at(12, 9) == PieceColor::YELLOW);
        REQUIRE(board.at(12, 10) == PieceColor::YELLOW);
        REQUIRE(board.at(12, 11) == PieceColor::GREEN);
        REQUIRE(board.at(12, 12) == PieceColor::RED);
        REQUIRE(board.at(12, 13) == PieceColor::NONE);
        REQUIRE(board.at(12, 14) == PieceColor::GREEN);
        REQUIRE(board.at(12, 15) == PieceColor::GREEN);
        REQUIRE(board.at(12, 16) == PieceColor::GREEN);
        REQUIRE(board.at(12, 17) == PieceColor::NONE);
        REQUIRE(board.at(12, 18) == PieceColor::RED);
        REQUIRE(board.at(12, 19) == PieceColor::GREEN);
        REQUIRE(board.at(13, 0) == PieceColor::BLUE);
        REQUIRE(board.at(13, 1) == PieceColor::BLUE);
        REQUIRE(board.at(13, 2) == PieceColor::NONE);
        REQUIRE(board.at(13, 3) == PieceColor::YELLOW);
        REQUIRE(board.at(13, 4) == PieceColor::NONE);
        REQUIRE(board.at(13, 5) == PieceColor::GREEN);
        REQUIRE(board.at(13, 6) == PieceColor::GREEN);
        REQUIRE(board.at(13, 7) == PieceColor::GREEN);
        REQUIRE(board.at(13, 8) == PieceColor::YELLOW);
        REQUIRE(board.at(13, 9) == PieceColor::YELLOW);
        REQUIRE(board.at(13, 10) == PieceColor::GREEN);
        REQUIRE(board.at(13, 11) == PieceColor::NONE);
        REQUIRE(board.at(13, 12) == PieceColor::GREEN);
        REQUIRE(board.at(13, 13) == PieceColor::NONE);
        REQUIRE(board.at(13, 14) == PieceColor::GREEN);
        REQUIRE(board.at(13, 15) == PieceColor::NONE);
        REQUIRE(board.at(13, 16) == PieceColor::NONE);
        REQUIRE(board.at(13, 17) == PieceColor::GREEN);
        REQUIRE(board.at(13, 18) == PieceColor::NONE);
        REQUIRE(board.at(13, 19) == PieceColor::GREEN);
        REQUIRE(board.at(14, 0) == PieceColor::YELLOW);
        REQUIRE(board.at(14, 1) == PieceColor::NONE);
        REQUIRE(board.at(14, 2) == PieceColor::YELLOW);
        REQUIRE(board.at(14, 3) == PieceColor::YELLOW);
        REQUIRE(board.at(14, 4) == PieceColor::GREEN);
        REQUIRE(board.at(14, 5) == PieceColor::YELLOW);
        REQUIRE(board.at(14, 6) == PieceColor::YELLOW);
        REQUIRE(board.at(14, 7) == PieceColor::YELLOW);
        REQUIRE(board.at(14, 8) == PieceColor::GREEN);
        REQUIRE(board.at(14, 9) == PieceColor::GREEN);
        REQUIRE(board.at(14, 10) == PieceColor::YELLOW);
        REQUIRE(board.at(14, 11) == PieceColor::NONE);
        REQUIRE(board.at(14, 12) == PieceColor::GREEN);
        REQUIRE(board.at(14, 13) == PieceColor::GREEN);
        REQUIRE(board.at(14, 14) == PieceColor::NONE);
        REQUIRE(board.at(14, 15) == PieceColor::GREEN);
        REQUIRE(board.at(14, 16) == PieceColor::NONE);
        REQUIRE(board.at(14, 17) == PieceColor::GREEN);
        REQUIRE(board.at(14, 18) == PieceColor::GREEN);
        REQUIRE(board.at(14, 19) == PieceColor::NONE);
        REQUIRE(board.at(15, 0) == PieceColor::YELLOW);
        REQUIRE(board.at(15, 1) == PieceColor::YELLOW);
        REQUIRE(board.at(15, 2) == PieceColor::NONE);
        REQUIRE(board.at(15, 3) == PieceColor::YELLOW);
        REQUIRE(board.at(15, 4) == PieceColor::GREEN);
        REQUIRE(board.at(15, 5) == PieceColor::NONE);
        REQUIRE(board.at(15, 6) == PieceColor::NONE);
        REQUIRE(board.at(15, 7) == PieceColor::YELLOW);
        REQUIRE(board.at(15, 8) == PieceColor::GREEN);
        REQUIRE(board.at(15, 9) == PieceColor::YELLOW);
        REQUIRE(board.at(15, 10) == PieceColor::YELLOW);
        REQUIRE(board.at(15, 11) == PieceColor::YELLOW);
        REQUIRE(board.at(15, 12) == PieceColor::GREEN);
        REQUIRE(board.at(15, 13) == PieceColor::NONE);
        REQUIRE(board.at(15, 14) == PieceColor::GREEN);
        REQUIRE(board.at(15, 15) == PieceColor::GREEN);
        REQUIRE(board.at(15, 16) == PieceColor::GREEN);
        REQUIRE(board.at(15, 17) == PieceColor::NONE);
        REQUIRE(board.at(15, 18) == PieceColor::GREEN);
        REQUIRE(board.at(15, 19) == PieceColor::NONE);
        REQUIRE(board.at(16, 0) == PieceColor::YELLOW);
        REQUIRE(board.at(16, 1) == PieceColor::NONE);
        REQUIRE(board.at(16, 2) == PieceColor::NONE);
        REQUIRE(board.at(16, 3) == PieceColor::YELLOW);
        REQUIRE(board.at(16, 4) == PieceColor::GREEN);
        REQUIRE(board.at(16, 5) == PieceColor::GREEN);
        REQUIRE(board.at(16, 6) == PieceColor::GREEN);
        REQUIRE(board.at(16, 7) == PieceColor::YELLOW);
        REQUIRE(board.at(16, 8) == PieceColor::GREEN);
        REQUIRE(board.at(16, 9) == PieceColor::GREEN);
        REQUIRE(board.at(16, 10) == PieceColor::YELLOW);
        REQUIRE(board.at(16, 11) == PieceColor::NONE);
        REQUIRE(board.at(16, 12) == PieceColor::GREEN);
        REQUIRE(board.at(16, 13) == PieceColor::NONE);
        REQUIRE(board.at(16, 14) == PieceColor::NONE);
        REQUIRE(board.at(16, 15) == PieceColor::GREEN);
        REQUIRE(board.at(16, 16) == PieceColor::NONE);
        REQUIRE(board.at(16, 17) == PieceColor::NONE);
        REQUIRE(board.at(16, 18) == PieceColor::GREEN);
        REQUIRE(board.at(16, 19) == PieceColor::NONE);
        REQUIRE(board.at(17, 0) == PieceColor::NONE);
        REQUIRE(board.at(17, 1) == PieceColor::YELLOW);
        REQUIRE(board.at(17, 2) == PieceColor::YELLOW);
        REQUIRE(board.at(17, 3) == PieceColor::NONE);
        REQUIRE(board.at(17, 4) == PieceColor::NONE);
        REQUIRE(board.at(17, 5) == PieceColor::YELLOW);
        REQUIRE(board.at(17, 6) == PieceColor::YELLOW);
        REQUIRE(board.at(17, 7) == PieceColor::NONE);
        REQUIRE(board.at(17, 8) == PieceColor::NONE);
        REQUIRE(board.at(17, 9) == PieceColor::YELLOW);
        REQUIRE(board.at(17, 10) == PieceColor::NONE);
        REQUIRE(board.at(17, 11) == PieceColor::GREEN);
        REQUIRE(board.at(17, 12) == PieceColor::NONE);
        REQUIRE(board.at(17, 13) == PieceColor::NONE);
        REQUIRE(board.at(17, 14) == PieceColor::NONE);
        REQUIRE(board.at(17, 15) == PieceColor::NONE);
        REQUIRE(board.at(17, 16) == PieceColor::NONE);
        REQUIRE(board.at(17, 17) == PieceColor::GREEN);
        REQUIRE(board.at(17, 18) == PieceColor::NONE);
        REQUIRE(board.at(17, 19) == PieceColor::NONE);
        REQUIRE(board.at(18, 0) == PieceColor::NONE);
        REQUIRE(board.at(18, 1) == PieceColor::YELLOW);
        REQUIRE(board.at(18, 2) == PieceColor::NONE);
        REQUIRE(board.at(18, 3) == PieceColor::YELLOW);
        REQUIRE(board.at(18, 4) == PieceColor::YELLOW);
        REQUIRE(board.at(18, 5) == PieceColor::YELLOW);
        REQUIRE(board.at(18, 6) == PieceColor::NONE);
        REQUIRE(board.at(18, 7) == PieceColor::YELLOW);
        REQUIRE(board.at(18, 8) == PieceColor::YELLOW);
        REQUIRE(board.at(18, 9) == PieceColor::YELLOW);
        REQUIRE(board.at(18, 10) == PieceColor::NONE);
        REQUIRE(board.at(18, 11) == PieceColor::GREEN);
        REQUIRE(board.at(18, 12) == PieceColor::GREEN);
        REQUIRE(board.at(18, 13) == PieceColor::NONE);
        REQUIRE(board.at(18, 14) == PieceColor::GREEN);
        REQUIRE(board.at(18, 15) == PieceColor::GREEN);
        REQUIRE(board.at(18, 16) == PieceColor::NONE);
        REQUIRE(board.at(18, 17) == PieceColor::GREEN);
        REQUIRE(board.at(18, 18) == PieceColor::GREEN);
        REQUIRE(board.at(18, 19) == PieceColor::GREEN);
        REQUIRE(board.at(19, 0) == PieceColor::YELLOW);
        REQUIRE(board.at(19, 1) == PieceColor::YELLOW);
        REQUIRE(board.at(19, 2) == PieceColor::NONE);
        REQUIRE(board.at(19, 3) == PieceColor::NONE);
        REQUIRE(board.at(19, 4) == PieceColor::NONE);
        REQUIRE(board.at(19, 5) == PieceColor::NONE);
        REQUIRE(board.at(19, 6) == PieceColor::NONE);
        REQUIRE(board.at(19, 7) == PieceColor::NONE);
        REQUIRE(board.at(19, 8) == PieceColor::NONE);
        REQUIRE(board.at(19, 9) == PieceColor::YELLOW);
        REQUIRE(board.at(19, 10) == PieceColor::GREEN);
        REQUIRE(board.at(19, 11) == PieceColor::GREEN);
        REQUIRE(board.at(19, 12) == PieceColor::NONE);
        REQUIRE(board.at(19, 13) == PieceColor::GREEN);
        REQUIRE(board.at(19, 14) == PieceColor::GREEN);
        REQUIRE(board.at(19, 15) == PieceColor::GREEN);
        REQUIRE(board.at(19, 16) == PieceColor::NONE);
        REQUIRE(board.at(19, 17) == PieceColor::NONE);
        REQUIRE(board.at(19, 18) == PieceColor::NONE);
        REQUIRE(board.at(19, 19) == PieceColor::GREEN);
        #pragma endregion
    }
}